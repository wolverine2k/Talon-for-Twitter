apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

File keystoreProperties = rootProject.file("keystore.properties")
def props = new Properties()
if (keystoreProperties.exists()) {
    props.load(new FileInputStream(keystoreProperties))
} else {
    props['keystorefile'] = 'none';
}

android {
    compileSdkVersion Integer.parseInt(project.TARGET_SDK)
    buildToolsVersion project.BUILD_TOOLS_VERSION

    defaultConfig {
        def code = System.getenv("BUILD_NUMBER") as Integer ?: Integer.parseInt(project.VERSION_CODE)
        code += 250
        
        applicationId "com.klinker.android.twitter"
        minSdkVersion Integer.parseInt(project.MIN_SDK)
        targetSdkVersion Integer.parseInt(project.TARGET_SDK)
        versionCode code
        versionName project.VERSION_NAME
    }

    File keystore = new File(props['keystorefile'])
    if (keystore.exists()) {
        signingConfigs {
            release {
                storeFile keystore
                storePassword props['keystorepassword']
                keyAlias props['keyalias']
                keyPassword props['keypassword']
            }
        }

        buildTypes {
            release {
                minifyEnabled true
                shrinkResources true
                proguardFiles getDefaultProguardFile('proguard-android.txt'), '../app/proguard-rules.pro'
                signingConfig signingConfigs.release
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:${KOTLIN_VERSION}"

    compile (project(":shared_assets"))

    compile 'com.google.android.support:wearable:1.0.0'
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion ANDROID_SUPPORT_VERSION
            }
        }
    }
}